pipeline {
  agent any
  stages {

        stage('Build') {
            steps {
                sh '''
				      
                    bash ./simple-java-maven-app/jenkins/build/mvnbuild.bash mvn -B -DskipTests clean package
                '''
            }

            post {
                success {
                   archiveArtifacts artifacts: 'simple-java-maven-app/target/*.jar', fingerprint: true
                }
            }
        }


    stage('Test') {
            steps {
                sh ' bash ./simple-java-maven-app/jenkins/test/mvntest.bash mvn test'
            }

        }

    stage('sonarqube') {
      environment {
        SCANNER_HOME = tool 'SonarQube Scanner 2.8'
        SONAR_TOKEN = credentials('sonarqube2')
        ORGANIZATION = "opstree"
        PROJECT_NAME = "opstree"
      }
      steps {
        withSonarQubeEnv(credentialsId: 'sonarqube2') {
            sh '''"${scannerHome}/bin/sonar-scanner" 
			-Dsonar.organization=$ORGANIZATION \
			-Dsonar.projectName=opstree
            -Dsonar.java.binaries=build/classes/java/ \
            -Dsonar.projectKey=$PROJECT_NAME \
            -Dsonar.sources=/home/deepak/jenkins/jenkins_data/jenkins_home/workspace/CI-pipe/simple-java-maven-app/target/*.jar
			'''
        }
      }
    }

    stage("Quality Gate") {
      steps {
        timeout(time: 1, unit: 'MINUTES') {
            waitForQualityGate abortPipeline: true
        }
      }
    }

  }
  
}