pipeline {
  agent any
  stages {

        stage('Build') {
            steps {
                sh '''
				      
                    bash ./simple-java-maven-app/jenkins/build/mvnbuild.bash mvn -B -DskipTests clean package
                '''
            }

            post {
                success {
                   archiveArtifacts artifacts: 'simple-java-maven-app/target/*.jar', fingerprint: true
                }
            }
        }


    stage('Test') {
            steps {
                sh ' bash ./simple-java-maven-app/jenkins/test/mvntest.bash mvn test'
            }

        }

    stage('Sonarqube') {
    environment {
        scannerHome = tool 'sonarqube_scanner'
    }    
	steps {
        withSonarQubeEnv('sonarqube_server') {
            sh "${scannerHome}/bin/sonar-scanner"
        
            }
          
      
      }
	  }
    

    stage("Quality Gate") {
      steps {
        timeout(time: 1, unit: 'MINUTES') {
            waitForQualityGate abortPipeline: true
        }
      }
    }

  }
  
}